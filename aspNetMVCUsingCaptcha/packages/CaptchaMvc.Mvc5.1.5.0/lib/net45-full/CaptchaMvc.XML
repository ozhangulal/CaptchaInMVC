<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CaptchaMvc</name>
    </assembly>
    <members>
        <member name="T:JetBrains.Annotations.InvokerParameterNameAttribute">
            <summary>
            Indicates that the function argument should be string literal and match one of the parameters of the caller function.
            For example, <see cref="T:System.ArgumentNullException"/> has such parameter.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Attributes.CaptchaVerifyAttribute">
            <summary>
                Represents the attribute to validate the captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Attributes.CaptchaVerifyAttribute.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Attributes.CaptchaVerifyAttribute"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Attributes.CaptchaVerifyAttribute.#ctor(System.String,System.Type)">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Attributes.CaptchaVerifyAttribute"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Attributes.CaptchaVerifyAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>
                Called by the ASP.NET MVC framework before the action method executes.
            </summary>
            <param name="filterContext">The filter context.</param>
        </member>
        <member name="M:CaptchaMvc.Attributes.CaptchaVerifyAttribute.GetErrorMessage">
            <summary>
                Returns a error message.
            </summary>
            <returns>The error message.</returns>
        </member>
        <member name="P:CaptchaMvc.Attributes.CaptchaVerifyAttribute.ErrorMessage">
            <summary>
                Gets or sets an error message to associate with a validation control if validation fails.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Attributes.CaptchaVerifyAttribute.ResourceAccessor">
            <summary>
                Gets or sets a <see cref="T:System.Reflection.MethodInfo"/> for access to the resource message.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Controllers.DefaultCaptchaController">
            <summary>
                Represents the controller that is responsible for creating and updating captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Controllers.DefaultCaptchaController.Generate">
            <summary>
                Generates a new captcha image.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Controllers.DefaultCaptchaController.Refresh">
            <summary>
                Refreshes a captcha.
            </summary>
            <returns>
                An instance of <see cref="T:System.Web.Mvc.ActionResult"/>.
            </returns>
        </member>
        <member name="T:CaptchaMvc.HtmlHelpers.CaptchaHelper">
            <summary>
                Provides extension methods to work with a captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.HtmlHelpers.CaptchaHelper.Captcha(System.Web.Mvc.HtmlHelper,System.Int32,CaptchaMvc.Models.ParameterModel[])">
            <summary>
                Creates a new captcha with the specified arguments.
            </summary>
            <param name="htmlHelper">
                The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.
            </param>
            <param name="length">The specified length of characters.</param>
            <param name="parameters">The specified parameters, if any.</param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.ICaptcha"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.HtmlHelpers.CaptchaHelper.Captcha(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,CaptchaMvc.Models.ParameterModel[])">
            <summary>
                Creates a new captcha with the specified arguments.
            </summary>
            <param name="htmlHelper">
                The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.
            </param>
            <param name="refreshText">The specified refresh button text.</param>
            <param name="inputText">The specified input text.</param>
            <param name="length">The specified length of characters.</param>
            <param name="parameters">The specified parameters, if any.</param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.ICaptcha"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.HtmlHelpers.CaptchaHelper.Captcha(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.String,System.Boolean,CaptchaMvc.Models.ParameterModel[])">
            <summary>
                Creates a new captcha with the specified arguments.
            </summary>
            <param name="htmlHelper">
                The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.
            </param>
            <param name="refreshText">The specified refresh button text.</param>
            <param name="inputText">The specified input text.</param>
            <param name="length">The specified length of characters.</param>
            <param name="requiredMessageText">The specified required message text.</param>
            <param name="addValidationSpan">
                If <c>true</c> add a span for validation; otherwise <c>false</c>.
            </param>
            <param name="parameters">The specified parameters, if any.</param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.ICaptcha"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.HtmlHelpers.CaptchaHelper.Captcha(System.Web.Mvc.HtmlHelper,System.Int32,System.String,System.Web.Mvc.ViewDataDictionary,CaptchaMvc.Models.ParameterModel[])">
            <summary>
                Creates a new captcha with the specified partial view.
            </summary>
            <param name="htmlHelper">
                The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.
            </param>
            <param name="length">The specified length of characters.</param>
            <param name="partialViewName">The name of the partial view to render.</param>
            <param name="viewData">The view data dictionary for the partial view.</param>
            <param name="parameters">The specified parameters, if any.</param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.ICaptcha"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.HtmlHelpers.CaptchaHelper.Captcha(System.Web.Mvc.HtmlHelper,System.Int32,System.String,System.String,System.Web.Mvc.ViewDataDictionary,CaptchaMvc.Models.ParameterModel[])">
            <summary>
                Creates a new captcha with the specified partial view.
            </summary>
            <param name="htmlHelper">
                The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.
            </param>
            <param name="length">The specified length of characters.</param>
            <param name="partialViewName">The name of the partial view to render.</param>
            <param name="scriptPartialViewName">The name of the partial view to render script.</param>
            <param name="viewData">The view data dictionary for the partial view.</param>
            <param name="parameters">The specified parameters, if any.</param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.ICaptcha"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.HtmlHelpers.CaptchaHelper.MathCaptcha(System.Web.Mvc.HtmlHelper,CaptchaMvc.Models.ParameterModel[])">
            <summary>
                Creates a new math captcha with the specified arguments.
            </summary>
            <param name="htmlHelper">
                The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.
            </param>
            <param name="parameters">The specified parameters, if any.</param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.ICaptcha"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.HtmlHelpers.CaptchaHelper.MathCaptcha(System.Web.Mvc.HtmlHelper,System.String,System.String,CaptchaMvc.Models.ParameterModel[])">
            <summary>
                Creates a new math captcha with the specified arguments.
            </summary>
            <param name="htmlHelper">
                The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.
            </param>
            <param name="refreshText">The specified refresh button text.</param>
            <param name="inputText">The specified input text.</param>
            <param name="parameters">The specified parameters, if any.</param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.ICaptcha"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.HtmlHelpers.CaptchaHelper.MathCaptcha(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Boolean,CaptchaMvc.Models.ParameterModel[])">
            <summary>
                Creates a new math captcha with the specified arguments.
            </summary>
            <param name="htmlHelper">
                The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.
            </param>
            <param name="refreshText">The specified refresh button text.</param>
            <param name="inputText">The specified input text.</param>
            <param name="requiredMessageText">The specified required message text.</param>
            <param name="addValidationSpan">
                If <c>true</c> add a span for validation; otherwise <c>false</c>.
            </param>
            <param name="parameters">The specified parameters, if any.</param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.ICaptcha"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.HtmlHelpers.CaptchaHelper.MathCaptcha(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary,CaptchaMvc.Models.ParameterModel[])">
            <summary>
                Creates a new math captcha with the specified partial view.
            </summary>
            <param name="htmlHelper">
                The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.
            </param>
            <param name="partialViewName">The name of the partial view to render.</param>
            <param name="viewData">The view data dictionary for the partial view.</param>
            <param name="parameters">The specified parameters, if any.</param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.ICaptcha"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.HtmlHelpers.CaptchaHelper.MathCaptcha(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.ViewDataDictionary,CaptchaMvc.Models.ParameterModel[])">
            <summary>
                Creates a new math captcha with the specified partial view.
            </summary>
            <param name="htmlHelper">
                The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.
            </param>
            <param name="partialViewName">The name of the partial view to render.</param>
            <param name="scriptPartialViewName">The name of the partial view to render script.</param>
            <param name="viewData">The view data dictionary for the partial view.</param>
            <param name="parameters">The specified parameters, if any.</param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.ICaptcha"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.HtmlHelpers.CaptchaHelper.IsCaptchaValid(System.Web.Mvc.ControllerBase,System.String,CaptchaMvc.Models.ParameterModel[])">
            <summary>
                Determines whether the captcha is valid, and write error message if need.
            </summary>
            <param name="controllerBase">
                The specified <see cref="T:System.Web.Mvc.ControllerBase"/>.
            </param>
            <param name="errorText">The specified error message.</param>
            <param name="parameters">The specified parameters, if any.</param>
            <returns>
                <c>True</c> if the captcha is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.HtmlHelpers.CaptchaHelper.GetCaptchaManager(System.Web.Mvc.ControllerBase)">
            <summary>
            Gets the <see cref="T:CaptchaMvc.Interface.ICaptchaManager"/> using the specified <see cref="T:System.Web.Mvc.ControllerBase"/>.
            </summary>
            <param name="controllerBase">The specified <see cref="T:System.Web.Mvc.ControllerBase"/>.</param>
            <returns>An instance of <see cref="T:CaptchaMvc.Interface.ICaptchaManager"/>.</returns>
        </member>
        <member name="M:CaptchaMvc.HtmlHelpers.CaptchaHelper.GetCaptchaBuilderProvider(System.Web.Mvc.ControllerBase)">
            <summary>
            Gets the <see cref="T:CaptchaMvc.Interface.ICaptchaBuilderProvider"/> using the specified <see cref="T:System.Web.Mvc.ControllerBase"/>.
            </summary>
            <param name="controllerBase">The specified <see cref="T:System.Web.Mvc.ControllerBase"/>.</param>
            <returns>An instance of <see cref="T:CaptchaMvc.Interface.ICaptchaBuilderProvider"/>.</returns>
        </member>
        <member name="M:CaptchaMvc.HtmlHelpers.CaptchaHelper.GenerateCaptchaValue(System.Web.Mvc.ControllerBase,System.Int32,CaptchaMvc.Models.ParameterModel[])">
            <summary>
                Creates a new captcha values with the specified arguments.
            </summary>
            <param name="controller">
                The specified <see cref="T:System.Web.Mvc.ControllerBase"/>.
            </param>
            <param name="length">The specified length of characters.</param>
            <param name="parameters">The specified parameters, if any.</param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.IUpdateInfoModel"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.HtmlHelpers.CaptchaHelper.GenerateMathCaptchaValue(System.Web.Mvc.ControllerBase,CaptchaMvc.Models.ParameterModel[])">
            <summary>
                Creates a new math captcha values with the specified arguments.
            </summary>
            <param name="controller">
                The specified <see cref="T:System.Web.Mvc.ControllerBase"/>.
            </param>
            <param name="parameters">The specified parameters, if any.</param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.IUpdateInfoModel"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.HtmlHelpers.CaptchaHelper.AsIntelligent(CaptchaMvc.Interface.ICaptcha,CaptchaMvc.Models.ParameterModel[])">
            <summary>
                Makes the captcha "intelligent".
            </summary>
            <param name="captcha">
                The specified <see cref="T:CaptchaMvc.Interface.ICaptcha"/>.
            </param>
            <param name="parameters">The specified parameters, if any.</param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.ICaptcha"/>.
            </returns>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.CaptchaUtils">
            <summary>
                Provides methods to work with a captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CaptchaUtils.#cctor">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.CaptchaUtils"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CaptchaUtils.GenerateCaptcha(System.Web.Mvc.HtmlHelper,System.Collections.Generic.IList{CaptchaMvc.Models.ParameterModel})">
            <summary>
                Creates a new captcha with the specified arguments.
            </summary>
            <param name="htmlHelper">
                The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.
            </param>
            <param name="parameters">The specified attributes.</param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.ICaptcha"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CaptchaUtils.ValidateCaptcha(System.Web.Mvc.ControllerBase,System.Collections.Generic.IList{CaptchaMvc.Models.ParameterModel})">
            <summary>
                Determines whether the captcha is valid, and write error message if need.
            </summary>
            <param name="controller">
                The specified <see cref="T:System.Web.Mvc.ControllerBase"/>.
            </param>
            <param name="attributes">The specified attributes.</param>
            <returns>
                <c>True</c> if the captcha is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CaptchaUtils.TryFindParameter``1(System.Collections.Generic.IEnumerable{CaptchaMvc.Models.ParameterModel},System.String,``0@,``0)">
            <summary>
                Gets the value associated with the specified name.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CaptchaUtils.TryFindParameter``1(System.Collections.Generic.IEnumerable{CaptchaMvc.Models.ParameterModel},System.String,``0@)">
            <summary>
                Gets the value associated with the specified name.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CaptchaUtils.FindParameter``1(System.Collections.Generic.IEnumerable{CaptchaMvc.Models.ParameterModel},System.String)">
            <summary>
                Gets the value associated with the specified name.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CaptchaUtils.IsContains(System.Collections.Generic.IEnumerable{CaptchaMvc.Models.ParameterModel},System.String)">
            <summary>
                Determines whether the collection of parameters contains a specific value.
            </summary>
            <param name="parameters">The specified collection of parameters.</param>
            <param name="name">The parameter name for search.</param>
            <returns>
                <c>True</c> if the parameter is found in the collection; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.CaptchaUtils.BuilderProvider">
            <summary>
                Gets or sets the current <see cref="T:CaptchaMvc.Interface.ICaptchaBuilderProvider"/>.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.CaptchaUtils.CaptchaManager">
            <summary>
                Gets or sets the current <see cref="T:CaptchaMvc.Interface.ICaptchaManager"/>.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.CaptchaUtils.ImageGenerator">
            <summary>
                Gets or sets the current <see cref="T:CaptchaMvc.Interface.IImageGenerator"/>.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.CaptchaUtils.BuilderProviderFactory">
            <summary>
                Gets or sets the factory to create <see cref="T:CaptchaMvc.Interface.ICaptchaBuilderProvider"/>.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.CaptchaUtils.CaptchaManagerFactory">
            <summary>
                Gets or sets the factory to create <see cref="T:CaptchaMvc.Interface.ICaptchaManager"/>.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.CaptchaUtils.ImageGeneratorFactory">
            <summary>
                Gets or sets the factory to create <see cref="T:CaptchaMvc.Interface.IImageGenerator"/>.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.CombinedParameterContainer">
            <summary>
                Represents the implementation of <see cref="T:CaptchaMvc.Interface.IParameterContainer"/> that can combine two
                <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>
                in one.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Interface.IParameterContainer">
            <summary>
                Represents a container with values​​.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Interface.IParameterContainer.IsContains(System.String)">
            <summary>
                Determines whether the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/> contains a specific key.
            </summary>
            <param name="key">The specified key.</param>
            <returns>
                <c>True</c> if the value is found in the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Interface.IParameterContainer.Get``1(System.String)">
            <summary>
                Gets the value associated with the specified key.
            </summary>
            <typeparam name="T">The type of value.</typeparam>
            <param name="key">The specified key.</param>
            <returns>An instance of T.</returns>
        </member>
        <member name="M:CaptchaMvc.Interface.IParameterContainer.TryGet``1(System.String,``0@)">
            <summary>
                Gets the value associated with the specified key.
            </summary>
            <typeparam name="T">The type of value.</typeparam>
            <param name="key">The specified key.</param>
            <param name="value">An instance of T.</param>
            <returns>
                <c>True</c> if the value is found in the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Interface.IParameterContainer.TryGet``1(System.String,``0@,``0)">
            <summary>
                Gets the value associated with the specified key.
            </summary>
            <typeparam name="T">The type of value.</typeparam>
            <param name="key">The specified key.</param>
            <param name="value">An instance of T.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
                <c>True</c> if the value is found in the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:CaptchaMvc.Interface.IParameterContainer.ParameterProvider">
            <summary>
               Gets the data source of parameters.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CombinedParameterContainer.#ctor(CaptchaMvc.Interface.IParameterContainer,CaptchaMvc.Interface.IParameterContainer)">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.CombinedParameterContainer"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CombinedParameterContainer.IsContains(System.String)">
            <summary>
                Determines whether the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/> contains a specific key.
            </summary>
            <param name="key">The specified key.</param>
            <returns>
                <c>True</c> if the value is found in the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CombinedParameterContainer.Get``1(System.String)">
            <summary>
                Gets the value associated with the specified key.
            </summary>
            <typeparam name="T">The type of value.</typeparam>
            <param name="key">The specified key.</param>
            <returns>An instance of T.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CombinedParameterContainer.TryGet``1(System.String,``0@)">
            <summary>
                Gets the value associated with the specified key.
            </summary>
            <typeparam name="T">The type of value.</typeparam>
            <param name="key">The specified key.</param>
            <param name="value">An instance of T.</param>
            <returns>
                <c>True</c> if the value is found in the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CombinedParameterContainer.TryGet``1(System.String,``0@,``0)">
            <summary>
                Gets the value associated with the specified key.
            </summary>
            <typeparam name="T">The type of value.</typeparam>
            <param name="key">The specified key.</param>
            <param name="value">An instance of T.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
                <c>True</c> if the value is found in the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.CombinedParameterContainer.ParameterProvider">
            <summary>
                The data source.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.CookieStorageProvider">
            <summary>
                Represents the storage to save a captcha tokens in cookie.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Interface.IStorageProvider">
            <summary>
                Represents the storage to save a captcha tokens.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Interface.IStorageProvider.IsContains(System.String,CaptchaMvc.Interface.TokenType)">
            <summary>
                Determines whether the <see cref="T:CaptchaMvc.Interface.IStorageProvider"/> contains a specific token.
            </summary>
            <param name="token">The specified token.</param>
            <param name="tokenType">The specified token type.</param>
            <returns>
                <c>True</c> if the value is found in the <see cref="T:CaptchaMvc.Interface.IStorageProvider"/>; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Interface.IStorageProvider.Add(System.Collections.Generic.KeyValuePair{System.String,CaptchaMvc.Interface.ICaptchaValue})">
            <summary>
                Adds the specified token and <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/> to the storage.
            </summary>
            <param name="captchaPair">
                The specified <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            </param>
        </member>
        <member name="M:CaptchaMvc.Interface.IStorageProvider.Remove(System.String)">
            <summary>
                Removes the specified token and <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/> to the storage.
            </summary>
            <param name="token">The specified token.</param>
        </member>
        <member name="M:CaptchaMvc.Interface.IStorageProvider.GetValue(System.String,CaptchaMvc.Interface.TokenType)">
            <summary>
                Gets an <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/> associated with the specified token.
            </summary>
            <param name="token">The specified token.</param>
            <param name="tokenType">The specified token type.</param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CookieStorageProvider.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.CookieStorageProvider"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CookieStorageProvider.#ctor(System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.CookieStorageProvider"/> class.
            </summary>
            <param name="expiresMinutes">The specified expires of the cookie in minutes.</param>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CookieStorageProvider.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.CookieStorageProvider"/> class.
            </summary>
            <param name="cookieName">The specified cookie name.</param>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CookieStorageProvider.#ctor(System.Int32,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.CookieStorageProvider"/> class.
            </summary>
            <param name="expiresMinutes">The specified expires of the cookie in minutes.</param>
            <param name="cookieName">The specified cookie name.</param>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CookieStorageProvider.#ctor(System.Int32,System.String,System.String,System.Byte[])">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.CookieStorageProvider"/> class.
            </summary>
            <param name="expiresMinutes">The specified expires of the cookie in minutes.</param>
            <param name="cookieName">The specified cookie name.</param>
            <param name="password">The specified password to encrypt cookie</param>
            <param name="salt">The specified salt to encrypt cookie</param>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CookieStorageProvider.Add(System.Collections.Generic.KeyValuePair{System.String,CaptchaMvc.Interface.ICaptchaValue})">
            <summary>
                Adds the specified token and <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/> to the storage.
            </summary>
            <param name="captchaPair">
                The specified <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            </param>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CookieStorageProvider.Remove(System.String)">
            <summary>
                Removes the specified token and <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/> to the storage.
            </summary>
            <param name="token">The specified token.</param>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CookieStorageProvider.GetValue(System.String,CaptchaMvc.Interface.TokenType)">
            <summary>
                Gets an <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/> associated with the specified token.
            </summary>
            <param name="token">The specified token.</param>
            <param name="tokenType">The specified token type.</param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CookieStorageProvider.IsContains(System.String,CaptchaMvc.Interface.TokenType)">
            <summary>
                Determines whether the <see cref="T:CaptchaMvc.Interface.IStorageProvider"/> contains a specific token.
            </summary>
            <param name="token">The specified token.</param>
            <param name="tokenType">The specified token type.</param>
            <returns>
                <c>True</c> if the value is found in the <see cref="T:CaptchaMvc.Interface.IStorageProvider"/>; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CookieStorageProvider.Serialize(CaptchaMvc.Interface.ICaptchaValue)">
            <summary>
                Serializes the <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/>, to the given string.
            </summary>
            <param name="captchaValue">
                The specified <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/>.
            </param>
            <returns>The result string.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.CookieStorageProvider.Deserialize(System.String)">
            <summary>
                Deserializes the specified <see cref="T:System.String"/> into an <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/>.
            </summary>
            <param name="value">The specified serialize state.</param>
            <returns>
                The result <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/>.
            </returns>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.CookieStorageProvider.CookieName">
            <summary>
                Gets or sets the cookie name.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.CookieStorageProvider.ExpiresMinutes">
            <summary>
                Expires of the cookie in minutes.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.CookieStorageProvider.Password">
            <summary>
                Gets or sets the password to encrypt cookie.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.CookieStorageProvider.Salt">
            <summary>
                Gets or sets the salt to encrypt cookie.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.DefaultCaptchaBuilder">
            <summary>
                Default implementation of a <see cref="T:CaptchaMvc.Interface.ICaptchaBulder"/>.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Interface.ICaptchaBulder">
            <summary>
                Represents the base model to create a new captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Interface.ICaptchaBulder.Build(CaptchaMvc.Interface.IBuildInfoModel)">
            <summary>
                Creates a new captcha using the specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </summary>
            <param name="buildInfoModel">
                The specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </param>
            <returns>An instance of <see cref="T:CaptchaMvc.Interface.ICaptcha"/>.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaBuilder.Build(CaptchaMvc.Interface.IBuildInfoModel)">
            <summary>
                Creates a new captcha using the specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </summary>
            <param name="buildInfoModel">
                The specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </param>
            <returns>An instance of <see cref="T:CaptchaMvc.Interface.ICaptcha"/>.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaBuilder.GenerateCaptchaImage(CaptchaMvc.Interface.IBuildInfoModel)">
            <summary>
                Creates a html string to represent the image.
            </summary>
            <param name="buildInfoModel">
                The specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </param>
            <returns>The html string with the image.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaBuilder.GenerateTokenElement(CaptchaMvc.Interface.IBuildInfoModel)">
            <summary>
                Creates a html string to represent the token element.
            </summary>
            <param name="buildInfoModel">
                The specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </param>
            <returns>The html string with the token element.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaBuilder.GenerateInputElement(CaptchaMvc.Interface.IBuildInfoModel)">
            <summary>
                Creates a html string to represent the input element.
            </summary>
            <param name="buildInfo">
                The specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </param>
            <returns>The html string with the input element.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaBuilder.GenerateRefreshButton(CaptchaMvc.Interface.IBuildInfoModel)">
            <summary>
                Creates a html string to represent the refresh button element.
            </summary>
            <param name="buildInfoModel">
                The specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </param>
            <returns>The html string with the refresh button element.</returns>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.DefaultCaptchaBuilder.RefreshButton">
            <summary>
                Represents the model for refresh button.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Infrastructure.DefaultCaptchaBuilder.RefreshButton.Markup">
            <summary>
                Gets the markup.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Infrastructure.DefaultCaptchaBuilder.RefreshButton.Script">
            <summary>
                Gets the script.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaBuilder.RefreshButton.#ctor(System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.DefaultCaptchaBuilderProvider">
            <summary>
                Provides a basic methods to create a captcha.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Interface.ICaptchaBuilderProvider">
            <summary>
                Represents the interface that provides a basic methods to create a captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Interface.ICaptchaBuilderProvider.GenerateCaptcha(CaptchaMvc.Interface.IBuildInfoModel)">
            <summary>
                Creates a new captcha to the specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </summary>
            <param name="buildInfoModel">
                The specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </param>
            <returns>The html string with the captcha.</returns>
        </member>
        <member name="M:CaptchaMvc.Interface.ICaptchaBuilderProvider.WriteCaptchaImage(System.Web.HttpResponseBase,CaptchaMvc.Interface.IDrawingModel)">
            <summary>
                Creates a captcha image for specified <see cref="T:CaptchaMvc.Interface.IDrawingModel"/> and write it in response.
            </summary>
            <param name="response">
                The specified <see cref="T:System.Web.HttpResponseBase"/>.
            </param>
            <param name="drawingModel">
                The specified <see cref="T:CaptchaMvc.Interface.IDrawingModel"/>.
            </param>
        </member>
        <member name="M:CaptchaMvc.Interface.ICaptchaBuilderProvider.WriteErrorImage(System.Web.HttpResponseBase)">
            <summary>
                Creates a captcha error image and write it in response.
            </summary>
            <param name="response">
                The specified <see cref="T:System.Web.HttpResponse"/>.
            </param>
        </member>
        <member name="M:CaptchaMvc.Interface.ICaptchaBuilderProvider.RefreshCaptcha(CaptchaMvc.Interface.IUpdateInfoModel)">
            <summary>
                Generates a java-script to update the captcha.
            </summary>
            <param name="updateInfo">
                The specified <see cref="T:CaptchaMvc.Interface.IUpdateInfoModel"/>.
            </param>
            <returns>
                An instance of <see cref="T:System.Web.Mvc.ActionResult"/> to update the captcha.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaBuilderProvider.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.DefaultCaptchaBuilderProvider"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaBuilderProvider.GenerateCaptcha(CaptchaMvc.Interface.IBuildInfoModel)">
            <summary>
                Creates a new captcha to the specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </summary>
            <param name="buildInfoModel">
                The specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </param>
            <returns>The html string with the captcha.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaBuilderProvider.WriteCaptchaImage(System.Web.HttpResponseBase,CaptchaMvc.Interface.IDrawingModel)">
            <summary>
                Creates a captcha image for specified <see cref="T:CaptchaMvc.Interface.IDrawingModel"/> and write it in response.
            </summary>
            <param name="response">
                The specified <see cref="T:System.Web.HttpResponseBase"/>.
            </param>
            <param name="drawingModel">
                The specified <see cref="T:CaptchaMvc.Interface.IDrawingModel"/>.
            </param>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaBuilderProvider.WriteErrorImage(System.Web.HttpResponseBase)">
            <summary>
                Creates a captcha error image and write it in response.
            </summary>
            <param name="response">
                The specified <see cref="T:System.Web.HttpResponse"/>.
            </param>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaBuilderProvider.RefreshCaptcha(CaptchaMvc.Interface.IUpdateInfoModel)">
            <summary>
                Generates a java-script to update the captcha.
            </summary>
            <param name="updateInfo">
                The specified <see cref="T:CaptchaMvc.Interface.IUpdateInfoModel"/>.
            </param>
            <returns>
                An instance of <see cref="T:System.Web.Mvc.ActionResult"/> to update the captcha.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaBuilderProvider.GetCaptchaBuilder(CaptchaMvc.Interface.IBuildInfoModel)">
            <summary>
                Gets the <see cref="T:CaptchaMvc.Interface.ICaptchaBulder"/> for build captcha with specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </summary>
            <param name="buildInfoModel">
                The specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.ICaptchaBulder"/>.
            </returns>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.DefaultCaptchaBuilderProvider.CaptchaBuilderFactory">
            <summary>
                Gets or sets the factory to create <c>ICaptchaBulder</c> for the specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>
            </summary>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.DefaultCaptchaManager">
            <summary>
                Provides a basic methods for manage captcha.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Interface.ICaptchaManager">
            <summary>
                Represents the interface that provides a basic methods for manage captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Interface.ICaptchaManager.GenerateNew(System.Web.Mvc.HtmlHelper,CaptchaMvc.Interface.IParameterContainer)">
            <summary>
                Creates a <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/> for create a new captcha.
            </summary>
            <param name="htmlHelper">
                The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.
            </param>
            <param name="parameterContainer">
                The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Interface.ICaptchaManager.GenerateNew(System.Web.Mvc.ControllerBase,CaptchaMvc.Interface.IParameterContainer)">
            <summary>
                Creates a <see cref="T:CaptchaMvc.Interface.IUpdateInfoModel"/> for create a new captcha.
            </summary>
            <param name="controller">
                The specified <see cref="T:System.Web.Mvc.ControllerBase"/>.
            </param>
            <param name="parameterContainer">
                The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.IUpdateInfoModel"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Interface.ICaptchaManager.GetDrawingModel(CaptchaMvc.Interface.IParameterContainer)">
            <summary>
                Creates a new <see cref="T:CaptchaMvc.Interface.IDrawingModel"/> for drawing a captcha.
            </summary>
            <param name="parameterContainer">
                The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.IDrawingModel"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Interface.ICaptchaManager.Update(CaptchaMvc.Interface.IParameterContainer)">
            <summary>
                Creates a new <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/> for update a captcha.
            </summary>
            <param name="parameterContainer">
                The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.IUpdateInfoModel"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Interface.ICaptchaManager.ValidateCaptcha(System.Web.Mvc.ControllerBase,CaptchaMvc.Interface.IParameterContainer)">
            <summary>
                Determines whether the captcha is valid, and write error message if need.
            </summary>
            <param name="controller">
                The specified <see cref="T:System.Web.Mvc.ControllerBase"/>.
            </param>
            <param name="parameterContainer">
                The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </param>
            <returns>
                <c>True</c> if the captcha is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:CaptchaMvc.Interface.ICaptchaManager.TokenParameterName">
            <summary>
                Gets or sets the name for a token parameter.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.ICaptchaManager.InputElementName">
            <summary>
                Gets or sets the name for an input element in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.ICaptchaManager.ImageElementName">
            <summary>
                Gets or sets the name for image element in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.ICaptchaManager.TokenElementName">
            <summary>
                Gets or sets the name for token element in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.ICaptchaManager.AddAreaRouteValue">
            <summary>
            Gets or sets value that indicates that the current manager will add area route value in generated url.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.ICaptchaManager.StorageProvider">
            <summary>
                Gets or sets the storage to save a captcha tokens.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.ICaptchaManager.IntelligencePolicy">
            <summary>
                Gets or sets the intelligence policy.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Infrastructure.DefaultCaptchaManager.IsNeedValidationSpanAttribute">
            <summary>
                Gets the parameter-key that indicates need render span for validation.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Infrastructure.DefaultCaptchaManager.IsRequiredAttribute">
            <summary>
                Gets the parameter-key for required attribute.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Infrastructure.DefaultCaptchaManager.RequiredMessageAttribute">
            <summary>
                Gets the parameter-key for required message.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Infrastructure.DefaultCaptchaManager.ErrorAttribute">
            <summary>
                Gets the parameter-key for error message.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Infrastructure.DefaultCaptchaManager.LengthAttribute">
            <summary>
                Gets the parameter-key for length of characters.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Infrastructure.DefaultCaptchaManager.RefreshTextAttribute">
            <summary>
                Gets the parameter-key for refresh button text.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Infrastructure.DefaultCaptchaManager.InputTextAttribute">
            <summary>
                Gets the parameter-key for input text.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Infrastructure.DefaultCaptchaManager.MathCaptchaAttribute">
            <summary>
                Gets the parameter-key for math parameter.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Infrastructure.DefaultCaptchaManager.PartialViewNameAttribute">
            <summary>
                Gets the parameter-key for partial view name.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Infrastructure.DefaultCaptchaManager.PartialViewDataAttribute">
            <summary>
                Gets the parameter-key for partial view data.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Infrastructure.DefaultCaptchaManager.ScriptPartialViewNameAttribute">
            <summary>
                Gets the parameter-key for script partial view name.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Infrastructure.DefaultCaptchaManager.CaptchaNotValidViewDataKey">
            <summary>
            Gets the parameter-key for view data.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.#ctor(CaptchaMvc.Interface.IStorageProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.DefaultCaptchaManager"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.#ctor(CaptchaMvc.Interface.IStorageProvider,System.String,System.String,System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.DefaultCaptchaManager"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.CreateBuildInfo(System.Web.Mvc.HtmlHelper,CaptchaMvc.Interface.IParameterContainer,System.Collections.Generic.KeyValuePair{System.String,CaptchaMvc.Interface.ICaptchaValue},System.String,System.String)">
            <summary>
                Creates an <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/> for the specified <see cref="T:System.Collections.Generic.KeyValuePair`2"/>.
            </summary>
            <param name="htmlHelper">
                The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.
            </param>
            <param name="parameterContainer">
                The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </param>
            <param name="captchaPair">
                The specified <see cref="T:System.Collections.Generic.KeyValuePair`2"/>.
            </param>
            <param name="imgUrl">The specified image url.</param>
            <param name="refreshUrl">The specified refresh url.</param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.CreateCaptchaPair(CaptchaMvc.Interface.IParameterContainer,CaptchaMvc.Interface.ICaptchaValue)">
            <summary>
                Generates a specified <see cref="T:System.Collections.Generic.KeyValuePair`2"/> for a captcha.
            </summary>
            <param name="parameterContainer">
                The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </param>
            <param name="oldValue">The old value if any.</param>
            <returns>
                An instance of <see cref="T:System.Collections.Generic.KeyValuePair`2"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.WriteError(System.Web.Mvc.ControllerBase,CaptchaMvc.Interface.IParameterContainer)">
            <summary>
                Writes an error message.
            </summary>
            <param name="controllerBase">
                The specified <see cref="T:System.Web.Mvc.ControllerBase"/>.
            </param>
            <param name="parameterContainer">
                The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </param>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.CreateDrawingModel(CaptchaMvc.Interface.IParameterContainer,CaptchaMvc.Interface.ICaptchaValue)">
            <summary>
                Creates a new <see cref="T:CaptchaMvc.Interface.IDrawingModel"/> for drawing a captcha.
            </summary>
            <param name="parameterContainer">
                The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </param>
            <param name="captchaValue">
                The specified <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/>.
            </param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.IDrawingModel"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.GenerateMathCaptcha">
            <summary>
                Generates a specified <see cref="T:System.Collections.Generic.KeyValuePair`2"/> for a math captcha.
            </summary>
            <returns>
                An instance of <see cref="T:System.Collections.Generic.KeyValuePair`2"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.GenerateSimpleCaptcha(System.Int32)">
            <summary>
                Generates a specified <see cref="T:System.Collections.Generic.KeyValuePair`2"/> for a text captcha.
            </summary>
            <param name="length">The specified length of characters.</param>
            <returns>
                An instance of <see cref="T:System.Collections.Generic.KeyValuePair`2"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.GenerateImageUrl(System.Web.Mvc.UrlHelper,System.Collections.Generic.KeyValuePair{System.String,CaptchaMvc.Interface.ICaptchaValue})">
            <summary>
                Generates an URL for a captcha image.
            </summary>
            <param name="urlHelper">
                The specified <see cref="T:System.Web.Mvc.UrlHelper"/>.
            </param>
            <param name="captchaPair">
                The specified <see cref="T:System.Collections.Generic.KeyValuePair`2"/>.
            </param>
            <returns>The url of captcha image.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.GenerateRefreshUrl(System.Web.Mvc.UrlHelper,System.Collections.Generic.KeyValuePair{System.String,CaptchaMvc.Interface.ICaptchaValue})">
            <summary>
                Generates an URL to refresh captcha.
            </summary>
            <param name="urlHelper">
                The specified <see cref="T:System.Web.Mvc.UrlHelper"/>.
            </param>
            <param name="captchaPair">
                The specified <see cref="T:System.Collections.Generic.KeyValuePair`2"/>.
            </param>
            <returns>The url to refresh captcha.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.GetCharacters">
            <summary>
                Gets the characters to create captcha.
            </summary>
            <returns>
                An instance of <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.GenerateNew(System.Web.Mvc.HtmlHelper,CaptchaMvc.Interface.IParameterContainer)">
            <summary>
                Creates a <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/> for create a new captcha.
            </summary>
            <param name="htmlHelper">
                The specified <see cref="T:System.Web.Mvc.HtmlHelper"/>.
            </param>
            <param name="parameterContainer">
                The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.GenerateNew(System.Web.Mvc.ControllerBase,CaptchaMvc.Interface.IParameterContainer)">
            <summary>
                Creates a <see cref="T:CaptchaMvc.Interface.IUpdateInfoModel"/> for create a new captcha.
            </summary>
            <param name="controller">
                The specified <see cref="T:System.Web.Mvc.ControllerBase"/>.
            </param>
            <param name="parameterContainer">
                The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.IUpdateInfoModel"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.GetDrawingModel(CaptchaMvc.Interface.IParameterContainer)">
            <summary>
                Creates a new <see cref="T:CaptchaMvc.Interface.IDrawingModel"/> for drawing a captcha.
            </summary>
            <param name="parameterContainer">
                The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.IDrawingModel"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.Update(CaptchaMvc.Interface.IParameterContainer)">
            <summary>
                Creates a new <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/> for update a captcha.
            </summary>
            <param name="parameterContainer">
                The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.IUpdateInfoModel"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultCaptchaManager.ValidateCaptcha(System.Web.Mvc.ControllerBase,CaptchaMvc.Interface.IParameterContainer)">
            <summary>
                Determines whether the captcha is valid, and write error message if need.
            </summary>
            <param name="controller">
                The specified <see cref="T:System.Web.Mvc.ControllerBase"/>.
            </param>
            <param name="parameterContainer">
                The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </param>
            <returns>
                <c>True</c> if the captcha is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.DefaultCaptchaManager.ImageUrlFactory">
            <summary>
                Gets or sets the factory that generates a URL for a captcha image.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.DefaultCaptchaManager.RefreshUrlFactory">
            <summary>
                Gets or sets the factory that generates a URL for a refresh captcha.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.DefaultCaptchaManager.MathCaptchaPairFactory">
            <summary>
                Gets or sets the factory that generates a pair for a math captcha.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.DefaultCaptchaManager.PlainCaptchaPairFactory">
            <summary>
                Gets or sets the factory that generates a pair for a plan captcha.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.DefaultCaptchaManager.DrawingModelFactory">
            <summary>
                Gets or sets the factory that generates an instance of <see cref="T:CaptchaMvc.Interface.IDrawingModel"/>.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.DefaultCaptchaManager.CharactersFactory">
            <summary>
                Gets or sets the factory that gets the characters for creating captcha.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.DefaultCaptchaManager.TokenParameterName">
            <summary>
                Gets or sets the name for a token parameter.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.DefaultCaptchaManager.InputElementName">
            <summary>
                Gets or sets the name for an input element in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.DefaultCaptchaManager.ImageElementName">
            <summary>
                Gets or sets the name for image element in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.DefaultCaptchaManager.TokenElementName">
            <summary>
                Gets or sets the name for token element in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.DefaultCaptchaManager.AddAreaRouteValue">
            <summary>
            Gets or sets value that indicates that the current manager will add area route value in generated url.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.DefaultCaptchaManager.StorageProvider">
            <summary>
                Gets or sets the storage to save a captcha tokens.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.DefaultCaptchaManager.IntelligencePolicy">
            <summary>
                Gets or sets the intelligence policy.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.DefaultImageGenerator">
            <summary>
                Represents default implementation to generate captcha image.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Interface.IImageGenerator">
            <summary>
                Represents interface to generate captcha image.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Interface.IImageGenerator.Generate(CaptchaMvc.Interface.IDrawingModel)">
            <summary>
                Creates a captcha image using the specified <see cref="T:CaptchaMvc.Interface.IDrawingModel"/>.
            </summary>
            <param name="drawingModel">
                The specified <see cref="T:CaptchaMvc.Interface.IDrawingModel"/>.
            </param>
            <returns>
                An instance of <see cref="T:System.Drawing.Bitmap"/>.
            </returns>
        </member>
        <member name="P:CaptchaMvc.Interface.IImageGenerator.FontColor">
            <summary>
                Gets or sets the font color.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IImageGenerator.Background">
            <summary>
                Gets or sets the background color.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IImageGenerator.Width">
            <summary>
                Gets or sets the width.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IImageGenerator.Height">
            <summary>
                Gets or sets the height.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IImageGenerator.Fonts">
            <summary>
                Gets the fonts.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultImageGenerator.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.DefaultImageGenerator.Generate(CaptchaMvc.Interface.IDrawingModel)">
            <summary>
                Creates a captcha image using the specified <see cref="T:CaptchaMvc.Interface.IDrawingModel"/>.
            </summary>
            <param name="drawingModel">
                The specified <see cref="T:CaptchaMvc.Interface.IDrawingModel"/>.
            </param>
            <returns>
                An instance of <see cref="T:System.Drawing.Bitmap"/>.
            </returns>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.DefaultImageGenerator.FontColor">
            <summary>
                Gets or sets the font color.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.DefaultImageGenerator.Background">
            <summary>
                Gets or sets the background color.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.DefaultImageGenerator.Width">
            <summary>
                Gets or sets the width.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.DefaultImageGenerator.Height">
            <summary>
                Gets or sets the height.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.DefaultImageGenerator.Fonts">
            <summary>
                Gets the fonts.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.FakeInputIntelligencePolicy">
            <summary>
                Represents the policy which makes a captcha as intelligent using a fake input element.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Interface.IIntelligencePolicy">
            <summary>
                Represents the policy which makes a captcha as intelligent.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Interface.IIntelligencePolicy.IsValid(CaptchaMvc.Interface.ICaptchaManager,System.Web.Mvc.ControllerBase,CaptchaMvc.Interface.IParameterContainer)">
            <summary>
                Determines whether the intelligent captcha is valid.
            </summary>
            <param name="captchaManager">The specified captcha manager.</param>
            <param name="controller">
                The specified <see cref="T:System.Web.Mvc.ControllerBase"/>.
            </param>
            <param name="parameterContainer">
                The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </param>
            <returns>
                <c>True</c> if the intelligent captcha is valid; <c>false</c> not valid; <c>null</c> is not intelligent captcha.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Interface.IIntelligencePolicy.MakeIntelligent(CaptchaMvc.Interface.ICaptchaManager,CaptchaMvc.Interface.ICaptcha,CaptchaMvc.Interface.IParameterContainer)">
            <summary>
                Makes the specified captcha "intelligent".
            </summary>
            <param name="captchaManager">The specified captcha manager.</param>
            <param name="captcha">
                The specified <see cref="T:CaptchaMvc.Interface.ICaptcha"/>.
            </param>
            <param name="parameterContainer">
                The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.ICaptcha"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.FakeInputIntelligencePolicy.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.FakeInputIntelligencePolicy"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.FakeInputIntelligencePolicy.#ctor(CaptchaMvc.Models.StorageType,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.FakeInputIntelligencePolicy"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.FakeInputIntelligencePolicy.IsValid(CaptchaMvc.Interface.ICaptchaManager,System.Web.Mvc.ControllerBase,CaptchaMvc.Interface.IParameterContainer)">
            <summary>
                Determines whether the intelligent captcha is valid.
            </summary>
            <param name="captchaManager">The specified captcha manager.</param>
            <param name="controller">
                The specified <see cref="T:System.Web.Mvc.ControllerBase"/>.
            </param>
            <param name="parameterContainer">
                The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </param>
            <returns>
                <c>True</c> if the intelligent captcha is valid; <c>false</c> not valid; <c>null</c> is not intelligent captcha.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.FakeInputIntelligencePolicy.MakeIntelligent(CaptchaMvc.Interface.ICaptchaManager,CaptchaMvc.Interface.ICaptcha,CaptchaMvc.Interface.IParameterContainer)">
            <summary>
                Makes the specified captcha "intelligent".
            </summary>
            <param name="captchaManager">The specified captcha manager.</param>
            <param name="captcha">
                The specified <see cref="T:CaptchaMvc.Interface.ICaptcha"/>.
            </param>
            <param name="parameterContainer">
                The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.ICaptcha"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.FakeInputIntelligencePolicy.RenderMarkup(CaptchaMvc.Interface.ICaptcha,System.String)">
            <summary>
                Renders only captcha markup, if any.
            </summary>
            <returns>
                An instance of string.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.FakeInputIntelligencePolicy.RenderScript(CaptchaMvc.Interface.ICaptcha)">
            <summary>
                Renders only captcha scripts, if any.
            </summary>
            <returns>
                An instance of string.
            </returns>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.FakeInputIntelligencePolicy.FakeInputName">
            <summary>
                Gets or sets the name of input field, if you use the intelligent captcha.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.FakeInputIntelligencePolicy.StorageType">
            <summary>
                Gets the type of storage that will be used for store a data.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.FakeInputIntelligencePolicy.SessionValuesMaxCount">
            <summary>
                Gets or sets the maximum size of session values.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.JavaScriptIntelligencePolicy">
            <summary>
                Represents the policy which makes a captcha intelligent using the javascript.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.JavaScriptIntelligencePolicy.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.JavaScriptIntelligencePolicy"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.JavaScriptIntelligencePolicy.#ctor(CaptchaMvc.Models.StorageType,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.JavaScriptIntelligencePolicy"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.JavaScriptIntelligencePolicy.IsValid(CaptchaMvc.Interface.ICaptchaManager,System.Web.Mvc.ControllerBase,CaptchaMvc.Interface.IParameterContainer)">
            <summary>
                Determines whether the intelligent captcha is valid.
            </summary>
            <param name="captchaManager">The specified captcha manager.</param>
            <param name="controller">
                The specified <see cref="T:System.Web.Mvc.ControllerBase"/>.
            </param>
            <param name="parameterContainer">
                The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </param>
            <returns>
                <c>True</c> if the intelligent captcha is valid; <c>false</c> not valid; <c>null</c> is not intelligent captcha.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.JavaScriptIntelligencePolicy.MakeIntelligent(CaptchaMvc.Interface.ICaptchaManager,CaptchaMvc.Interface.ICaptcha,CaptchaMvc.Interface.IParameterContainer)">
            <summary>
                Makes the specified captcha "intelligent".
            </summary>
            <param name="captchaManager">The specified captcha manager.</param>
            <param name="captcha">
                The specified <see cref="T:CaptchaMvc.Interface.ICaptcha"/>.
            </param>
            <param name="parameterContainer">
                The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.ICaptcha"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.JavaScriptIntelligencePolicy.RenderMarkup(CaptchaMvc.Interface.ICaptcha,System.String)">
            <summary>
                Renders only captcha markup, if any.
            </summary>
            <returns>
                An instance of string.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.JavaScriptIntelligencePolicy.RenderScript(System.String)">
            <summary>
                Renders only captcha scripts, if any.
            </summary>
            <returns>
                An instance of string.
            </returns>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.JavaScriptIntelligencePolicy.ValidationInputName">
            <summary>
                Gets or sets the name of input field, if you use the intelligent captcha.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.JavaScriptIntelligencePolicy.StorageType">
            <summary>
                Gets the type of storage that will be used for store a data.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.JavaScriptIntelligencePolicy.SessionValuesMaxCount">
            <summary>
                Gets or sets the maximum size of session values.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.MathCaptchaBuilder">
            <summary>
                Implementation of a <see cref="T:CaptchaMvc.Interface.ICaptchaBulder"/> for build a math captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.MathCaptchaBuilder.GenerateRefreshButton(CaptchaMvc.Interface.IBuildInfoModel)">
            <summary>
                Creates a html string to represent the refresh button element.
            </summary>
            <param name="buildInfoModel">
                The specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </param>
            <returns>The html string with the refresh button element.</returns>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.MultiIntelligencePolicy">
            <summary>
                Represents the policy which makes a captcha as intelligent using array of IIntelligencePolicy.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.MultiIntelligencePolicy.#ctor(CaptchaMvc.Interface.IIntelligencePolicy[])">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.MultiIntelligencePolicy"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.MultiIntelligencePolicy.IsValid(CaptchaMvc.Interface.ICaptchaManager,System.Web.Mvc.ControllerBase,CaptchaMvc.Interface.IParameterContainer)">
            <summary>
                Determines whether the intelligent captcha is valid.
            </summary>
            <param name="captchaManager">The specified captcha manager.</param>
            <param name="controller">
                The specified <see cref="T:System.Web.Mvc.ControllerBase"/>.
            </param>
            <param name="parameterContainer">
                The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </param>
            <returns>
                <c>True</c> if the intelligent captcha is valid; <c>false</c> not valid; <c>null</c> is not intelligent captcha.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.MultiIntelligencePolicy.MakeIntelligent(CaptchaMvc.Interface.ICaptchaManager,CaptchaMvc.Interface.ICaptcha,CaptchaMvc.Interface.IParameterContainer)">
            <summary>
                Makes the specified captcha "intelligent".
            </summary>
            <param name="captchaManager">The specified captcha manager.</param>
            <param name="captcha">
                The specified <see cref="T:CaptchaMvc.Interface.ICaptcha"/>.
            </param>
            <param name="parameterContainer">
                The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.ICaptcha"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.MultiIntelligencePolicy.RenderMarkup(CaptchaMvc.Interface.ICaptcha,System.String)">
            <summary>
                Renders only captcha markup, if any.
            </summary>
            <returns>
                An instance of string.
            </returns>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.MultiIntelligencePolicy.Policies">
            <summary>
                Gets the array of IIntelligencePolicy.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.ParameterModelContainer">
            <summary>
            Adapter for use the collection of <see cref="T:CaptchaMvc.Models.ParameterModel"/> as a <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.ParameterModelContainer.#ctor(System.Collections.Generic.IList{CaptchaMvc.Models.ParameterModel})">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.ParameterModelContainer"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.ParameterModelContainer.IsContains(System.String)">
            <summary>
                Determines whether the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/> contains a specific key.
            </summary>
            <param name="key">The specified key.</param>
            <returns>
                <c>True</c> if the value is found in the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.ParameterModelContainer.Get``1(System.String)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T">The type of value.</typeparam>
            <param name="key">The specified key.</param>
            <returns>An instance of <c>T</c>.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.ParameterModelContainer.TryGet``1(System.String,``0@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T">The type of value.</typeparam>
            <param name="key">The specified key.</param>
            <param name="value">An instance of T.</param>
            <returns><c>True</c> if the value is found in the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.ParameterModelContainer.TryGet``1(System.String,``0@,``0)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T">The type of value.</typeparam>
            <param name="key">The specified key.</param>
            <param name="value">An instance of T.</param>
            <param name="defaultValue">The default value.</param>
            <returns><c>True</c> if the value is found in the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.ParameterModelContainer.ParameterProvider">
            <summary>
            The data source.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.PartialCaptchaBuilder">
            <summary>
                Implementation of a <see cref="T:CaptchaMvc.Interface.ICaptchaBulder"/> for build partial captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.PartialCaptchaBuilder.Build(CaptchaMvc.Interface.IBuildInfoModel)">
            <summary>
                Creates a new captcha using the specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </summary>
            <param name="buildInfoModel">
                The specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </param>
            <returns>An instance of <see cref="T:CaptchaMvc.Interface.ICaptcha"/>.</returns>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.RandomNumber">
            <summary>
                Helper class to generates the random numbers.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.RandomNumber.Next">
            <summary>
                Generates a positive random number.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.RandomNumber.Next(System.Int32)">
            <summary>
                Generates a positive random number.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.RandomNumber.Next(System.Int32,System.Int32)">
            <summary>
                Generates a positive random number.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.RandomText">
            <summary>
                Helper class to generate the random text.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.RandomText.Generate(System.String,System.Int32)">
            <summary>
                Generates the random text.
            </summary>
            <param name="chars">The specified characters.</param>
            <param name="count">The number of characters.</param>
            <returns>The random text</returns>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.RequestParameterContainer">
            <summary>
            Adapter for use the <see cref="T:System.Web.HttpRequestBase"/> as a <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Infrastructure.RequestParameterContainer.HttpRequestParameterKey">
            <summary>
            The <see cref="T:System.Web.HttpRequestBase"/> parameter key.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.RequestParameterContainer.#ctor(System.Web.HttpRequestBase)">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.RequestParameterContainer"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.RequestParameterContainer.IsContains(System.String)">
            <summary>
                Determines whether the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/> contains a specific key.
            </summary>
            <param name="key">The specified key.</param>
            <returns>
                <c>True</c> if the value is found in the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.RequestParameterContainer.Get``1(System.String)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T">The type of value.</typeparam>
            <param name="key">The specified key.</param>
            <returns>An instance of T.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.RequestParameterContainer.TryGet``1(System.String,``0@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T">The type of value.</typeparam>
            <param name="key">The specified key.</param>
            <param name="value">An instance of T.</param>
            <returns><c>True</c> if the value is found in the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.RequestParameterContainer.TryGet``1(System.String,``0@,``0)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <typeparam name="T">The type of value.</typeparam>
            <param name="key">The specified key.</param>
            <param name="value">An instance of T.</param>
            <param name="defaultValue">The default value.</param>
            <returns><c>True</c> if the value is found in the <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.RequestParameterContainer.ParameterProvider">
            <summary>
            The data source.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.ResponseTimeIntelligencePolicy">
            <summary>
                Represents the policy which makes a captcha as intelligent using the difference between the time of the request and response.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.ResponseTimeIntelligencePolicy.#ctor(System.TimeSpan)">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.FakeInputIntelligencePolicy"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.ResponseTimeIntelligencePolicy.#ctor(CaptchaMvc.Models.StorageType,System.TimeSpan)">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.FakeInputIntelligencePolicy"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.ResponseTimeIntelligencePolicy.IsValid(CaptchaMvc.Interface.ICaptchaManager,System.Web.Mvc.ControllerBase,CaptchaMvc.Interface.IParameterContainer)">
            <summary>
                Determines whether the intelligent captcha is valid.
            </summary>
            <param name="captchaManager">The specified captcha manager.</param>
            <param name="controller">
                The specified <see cref="T:System.Web.Mvc.ControllerBase"/>.
            </param>
            <param name="parameterContainer">
                The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </param>
            <returns>
                <c>True</c> if the intelligent captcha is valid; <c>false</c> not valid; <c>null</c> is not intelligent captcha.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.ResponseTimeIntelligencePolicy.MakeIntelligent(CaptchaMvc.Interface.ICaptchaManager,CaptchaMvc.Interface.ICaptcha,CaptchaMvc.Interface.IParameterContainer)">
            <summary>
                Makes the specified captcha "intelligent".
            </summary>
            <param name="captchaManager">The specified captcha manager.</param>
            <param name="captcha">
                The specified <see cref="T:CaptchaMvc.Interface.ICaptcha"/>.
            </param>
            <param name="parameterContainer">
                The specified <see cref="T:CaptchaMvc.Interface.IParameterContainer"/>.
            </param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.ICaptcha"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.ResponseTimeIntelligencePolicy.RenderMarkup(CaptchaMvc.Interface.ICaptcha,System.String)">
            <summary>
                Renders only captcha markup, if any.
            </summary>
            <returns>
                An instance of string.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.ResponseTimeIntelligencePolicy.RenderScript(CaptchaMvc.Interface.ICaptcha)">
            <summary>
                Renders only captcha scripts, if any.
            </summary>
            <returns>
                An instance of string.
            </returns>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.ResponseTimeIntelligencePolicy.StorageType">
            <summary>
                Gets the type of storage that will be used for store a data.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.ResponseTimeIntelligencePolicy.MinResponseTime">
            <summary>
                Gets the minimum time at which the policy is valid.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.ResponseTimeIntelligencePolicy.SessionValuesMaxCount">
            <summary>
                Gets or sets the maximum size of session values.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.SessionStorageProvider">
            <summary>
                Represents the storage to save a captcha tokens in session.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.SessionStorageProvider.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.SessionStorageProvider"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.SessionStorageProvider.#ctor(System.UInt32)">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Infrastructure.SessionStorageProvider"/> class.
            </summary>
            <param name="maxCount">Gets or sets the maximum values.</param>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.SessionStorageProvider.Add(System.Collections.Generic.KeyValuePair{System.String,CaptchaMvc.Interface.ICaptchaValue})">
            <summary>
                Adds the specified token and <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/> to the storage.
            </summary>
            <param name="captchaPair">
                The specified <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            </param>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.SessionStorageProvider.Remove(System.String)">
            <summary>
                Removes the specified token and <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/> to the storage.
            </summary>
            <param name="token">The specified token.</param>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.SessionStorageProvider.GetValue(System.String,CaptchaMvc.Interface.TokenType)">
            <summary>
                Gets an <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/> associated with the specified token.
            </summary>
            <param name="token">The specified token.</param>
            <param name="tokenType">The specified token type.</param>
            <returns>
                An instance of <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.SessionStorageProvider.IsContains(System.String,CaptchaMvc.Interface.TokenType)">
            <summary>
                Determines whether the <see cref="T:CaptchaMvc.Interface.IStorageProvider"/> contains a specific token.
            </summary>
            <param name="token">The specified token.</param>
            <param name="tokenType">The specified token type.</param>
            <returns>
                <c>True</c> if the value is found in the <see cref="T:CaptchaMvc.Interface.IStorageProvider"/>; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.SessionStorageProvider.MaxCount">
            <summary>
                Gets or sets the maximum size of session values.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.SessionStorageProvider.ValidateKeys">
            <summary>
                Contains tokens that have not yet been validated.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Infrastructure.SessionStorageProvider.DrawingKeys">
            <summary>
                Contains tokens that have not yet been displayed.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Infrastructure.Validate">
            <summary>
                A static helper class that includes various parameter checking routines.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.Validate.ArgumentNotNull(System.Object,System.String)">
            <summary>
                Throws <see cref="T:System.ArgumentNullException"/> if the given argument is null.
            </summary>
            <exception cref="T:System.ArgumentNullException"> if tested value if null.</exception>
            <param name="argumentValue">Argument value to test.</param>
            <param name="paramName">Name of the parameter being tested. </param>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.Validate.ArgumentNotNullOrEmpty(System.String,System.String)">
            <summary>
                Throws <see cref="T:System.ArgumentNullException"/> if the given argument is null.
            </summary>
            <exception cref="T:System.ArgumentNullException"> if tested value if null.</exception>
            <param name="argumentValue">Argument value to test.</param>
            <param name="paramName">Name of the parameter being tested. </param>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.Validate.PropertyNotNull(System.Object,System.String)">
            <summary>
                Throws <see cref="T:System.ArgumentNullException"/> if the given argument is null.
            </summary>
            <exception cref="T:System.ArgumentNullException"> if tested value if null.</exception>
            <param name="argumentValue">Argument value to test.</param>
            <param name="paramName">Name of the parameter being tested. </param>
        </member>
        <member name="M:CaptchaMvc.Infrastructure.Validate.PropertyNotNullOrEmpty(System.String,System.String)">
            <summary>
                Throws <see cref="T:System.ArgumentNullException"/> if the given argument is null.
            </summary>
            <exception cref="T:System.ArgumentNullException"> if tested value if null.</exception>
            <param name="argumentValue">Argument value to test.</param>
            <param name="paramName">Name of the parameter being tested. </param>
        </member>
        <member name="T:CaptchaMvc.Interface.IBuildInfoModel">
            <summary>
                Represents the base model with information for create a captcha.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IBuildInfoModel.Attributes">
            <summary>
                Gets the attributes.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IBuildInfoModel.ParameterContainer">
            <summary>
                Gets the parameter container.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IBuildInfoModel.TokenParameterName">
            <summary>
                Gets the token parameter name.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IBuildInfoModel.RequiredMessage">
            <summary>
                Gets the required field message.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IBuildInfoModel.IsRequired">
            <summary>
                Gets the is required flag.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IBuildInfoModel.RefreshButtonText">
            <summary>
                Gets the refresh button text.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IBuildInfoModel.InputText">
            <summary>
                Gets the input text.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IBuildInfoModel.HtmlHelper">
            <summary>
                Gets the specified <see cref="P:CaptchaMvc.Interface.IBuildInfoModel.HtmlHelper"/>.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IBuildInfoModel.InputElementId">
            <summary>
                Gets the input element id in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IBuildInfoModel.TokenElementId">
            <summary>
                Gets the token element id in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IBuildInfoModel.ImageElementId">
            <summary>
                Gets the image element id in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IBuildInfoModel.ImageUrl">
            <summary>
                Gets the image url.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IBuildInfoModel.RefreshUrl">
            <summary>
                Gets the refresh url.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IBuildInfoModel.TokenValue">
            <summary>
                Gets the token value.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Interface.ICaptcha">
            <summary>
                Represents the captcha model.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Interface.ICaptcha.RenderMarkup">
            <summary>
                Renders only captcha markup, if any.
            </summary>
            <returns>
                An instance of <see cref="T:System.Web.IHtmlString"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Interface.ICaptcha.RenderScript">
            <summary>
                Renders only captcha scripts, if any.
            </summary>
            <returns>
                An instance of <see cref="T:System.Web.IHtmlString"/>.
            </returns>
        </member>
        <member name="P:CaptchaMvc.Interface.ICaptcha.BuildInfo">
            <summary>
                Gets the <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Interface.ICaptchaValue">
            <summary>
            Represents the base model for storing ​​captcha values.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Interface.ICaptchaValue.Serialize">
            <summary>
            Serializes the <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/>, to the given string.
            </summary>
            <returns>The result string.</returns>
        </member>
        <member name="M:CaptchaMvc.Interface.ICaptchaValue.Deserialize(System.String)">
            <summary>
            Deserializes the specified <see cref="T:System.String"/> into an <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/>.
            </summary>
            <param name="serializeState">The specified serialize state.</param>
        </member>
        <member name="M:CaptchaMvc.Interface.ICaptchaValue.IsEqual(System.String)">
            <summary>
            Determines whether the current captcha value is equal for the <c>inputText</c>.
            </summary>
            <param name="inputText">The specified input text.</param>
            <returns><c>True</c> if the value is equals; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:CaptchaMvc.Interface.ICaptchaValue.CaptchaText">
            <summary>
            Gets the specified captcha text.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.ICaptchaValue.Value">
            <summary>
            Gets the specified captcha value.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Interface.IDrawingModel">
            <summary>
            Represents the base model with information for drawing a captcha.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IDrawingModel.Attributes">
            <summary>
            Gets the specified attributes.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IDrawingModel.Text">
            <summary>
            Gets the specified text for render.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Interface.TokenType">
            <summary>
                Represents the token type.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Interface.TokenType.Drawing">
            <summary>
                The drawing token.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Interface.TokenType.Validation">
            <summary>
                The validation token.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Interface.IUpdateInfoModel">
            <summary>
            Represents the base model with information for update a captcha.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IUpdateInfoModel.TokenElementId">
            <summary>
            Gets the token element id in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IUpdateInfoModel.ImageElementId">
            <summary>
            Gets the image element id in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IUpdateInfoModel.ImageUrl">
            <summary>
            Gets the url with captcha image.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Interface.IUpdateInfoModel.TokenValue">
            <summary>
            Gets the token value.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Models.BaseBuildInfoModel">
            <summary>
                Represents the base model with information for create a captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.BaseBuildInfoModel.#ctor(CaptchaMvc.Interface.IParameterContainer,System.String,System.String,System.Boolean,System.String,System.String,System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Models.BaseBuildInfoModel"/> class.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.BaseBuildInfoModel.Attributes">
            <summary>
                Gets the attributes.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.BaseBuildInfoModel.ParameterContainer">
            <summary>
                Gets the parameter container.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.BaseBuildInfoModel.TokenParameterName">
            <summary>
                Gets the token parameter name.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.BaseBuildInfoModel.RequiredMessage">
            <summary>
                Gets the required field message.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.BaseBuildInfoModel.IsRequired">
            <summary>
                Gets the is required flag.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.BaseBuildInfoModel.RefreshButtonText">
            <summary>
                Gets the refresh button text.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.BaseBuildInfoModel.InputText">
            <summary>
                Gets the input text.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.BaseBuildInfoModel.HtmlHelper">
            <summary>
                Gets the specified <see cref="P:CaptchaMvc.Models.BaseBuildInfoModel.HtmlHelper"/>.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.BaseBuildInfoModel.InputElementId">
            <summary>
                Gets the input element id in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.BaseBuildInfoModel.TokenElementId">
            <summary>
                Gets the token element id in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.BaseBuildInfoModel.ImageElementId">
            <summary>
                Gets the image element id in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.BaseBuildInfoModel.ImageUrl">
            <summary>
                Gets the image url.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.BaseBuildInfoModel.RefreshUrl">
            <summary>
                Gets the refresh url.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.BaseBuildInfoModel.TokenValue">
            <summary>
                Gets the token value.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Models.CaptchaModel">
            <summary>
                Represents the default captcha model.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.CaptchaModel.#ctor(CaptchaMvc.Interface.IBuildInfoModel,System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Models.CaptchaModel"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.CaptchaModel.ToHtmlString">
            <summary>
                Returns an HTML-encoded string.
            </summary>
            <returns>
                An HTML-encoded string.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Models.CaptchaModel.RenderMarkup">
            <summary>
                Renders only captcha markup, if any.
            </summary>
            <returns>
                An instance of <see cref="T:System.Web.IHtmlString"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Models.CaptchaModel.RenderScript">
            <summary>
                Renders only captcha scripts, if any.
            </summary>
            <returns>
                An instance of <see cref="T:System.Web.IHtmlString"/>.
            </returns>
        </member>
        <member name="P:CaptchaMvc.Models.CaptchaModel.BuildInfo">
            <summary>
                Gets the <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Models.CaptchaValueBase">
            <summary>
                Represents the base model for storing ​​captcha values.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.CaptchaValueBase.Serialize">
            <summary>
                Serializes the <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/>, to the given string.
            </summary>
            <returns> The result string. </returns>
        </member>
        <member name="M:CaptchaMvc.Models.CaptchaValueBase.Deserialize(System.String)">
            <summary>
                Deserializes the specified <see cref="T:System.String"/> into an <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/>.
            </summary>
            <param name="serializeState"> The specified serialize state. </param>
        </member>
        <member name="M:CaptchaMvc.Models.CaptchaValueBase.IsEqual(System.String)">
            <summary>
                Determines whether the current captcha value is equal for the <c>inputText</c>.
            </summary>
            <param name="inputText"> The specified input text. </param>
            <returns> <c>True</c> if the value is equals; otherwise, <c>false</c> . </returns>
        </member>
        <member name="M:CaptchaMvc.Models.CaptchaValueBase.DeserializeInternal(System.String,System.String,System.String[])">
            <summary>
                Deserializes the specified values into an <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/>.
            </summary>
            <param name="captchaText"> The specified captcha text. </param>
            <param name="value"> The specified captcha value. </param>
            <param name="source"> The specified values. </param>
        </member>
        <member name="M:CaptchaMvc.Models.CaptchaValueBase.GetSeparator">
            <summary>
            Gets the separator which will be used for serialize values.
            </summary>
            <returns>An instance of <see cref="T:System.String"/> .</returns>
        </member>
        <member name="M:CaptchaMvc.Models.CaptchaValueBase.GetOptionalValue">
            <summary>
                Gets the optional values to serialize.
            </summary>
            <returns> An instance of <see cref="T:System.String"/> . </returns>
        </member>
        <member name="P:CaptchaMvc.Models.CaptchaValueBase.CaptchaText">
            <summary>
                Gets the specified captcha text.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.CaptchaValueBase.Value">
            <summary>
                Gets the specified captcha value.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Models.DefaultBuildInfoModel">
            <summary>
            Represents the default model with information for create a captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.DefaultBuildInfoModel.#ctor(CaptchaMvc.Interface.IParameterContainer,System.String,System.String,System.Boolean,System.String,System.String,System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Models.DefaultBuildInfoModel"/> class.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Models.DefaultDrawingModel">
            <summary>
            Represents the base model with information for drawing a captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.DefaultDrawingModel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Models.DefaultDrawingModel"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.DefaultDrawingModel.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Models.DefaultDrawingModel"/> class.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.DefaultDrawingModel.Attributes">
            <summary>
            Gets the specified attributes.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.DefaultDrawingModel.Text">
            <summary>
            Gets the specified text for render.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Models.DefaultUpdateInfoModel">
            <summary>
            Represents the base model with information for update a captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.DefaultUpdateInfoModel.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Models.DefaultUpdateInfoModel"/> class.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.DefaultUpdateInfoModel.TokenElementId">
            <summary>
            Gets the token element id in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.DefaultUpdateInfoModel.ImageElementId">
            <summary>
            Gets the image element id in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.DefaultUpdateInfoModel.ImageUrl">
            <summary>
            Gets the url with captcha image.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.DefaultUpdateInfoModel.TokenValue">
            <summary>
            Gets the token value.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Models.IntelligentCaptchaDecorator">
            <summary>
                Represents the decorator to make captcha intelligent.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.IntelligentCaptchaDecorator.#ctor(CaptchaMvc.Interface.ICaptcha,System.Func{CaptchaMvc.Interface.ICaptcha,System.String},System.Func{CaptchaMvc.Interface.ICaptcha,System.String},System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Models.IntelligentCaptchaDecorator"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.IntelligentCaptchaDecorator.ToHtmlString">
            <summary>
                Returns an HTML-encoded string.
            </summary>
            <returns>
                An HTML-encoded string.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Models.IntelligentCaptchaDecorator.RenderMarkup">
            <summary>
                Renders only captcha markup, if any.
            </summary>
            <returns>
                An instance of <see cref="T:System.Web.IHtmlString"/>.
            </returns>
        </member>
        <member name="M:CaptchaMvc.Models.IntelligentCaptchaDecorator.RenderScript">
            <summary>
                Renders only captcha scripts, if any.
            </summary>
            <returns>
                An instance of <see cref="T:System.Web.IHtmlString"/>.
            </returns>
        </member>
        <member name="P:CaptchaMvc.Models.IntelligentCaptchaDecorator.PolicyType">
            <summary>
            Gets the type of the current decorator.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.IntelligentCaptchaDecorator.BuildInfo">
            <summary>
                Gets the <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/>.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Models.KeyTimeEntry`1">
            <summary>
                Structure to store keys in dictionary in time order.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.KeyTimeEntry`1.Equals(CaptchaMvc.Models.KeyTimeEntry{`0})">
            <summary>
                Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
                true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:CaptchaMvc.Models.KeyTimeEntry`1.Equals(System.Object)">
            <summary>
                Indicates whether this instance and a specified object are equal.
            </summary>
            <returns>
                true if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, false.
            </returns>
            <param name="obj">Another object to compare to. </param>
        </member>
        <member name="M:CaptchaMvc.Models.KeyTimeEntry`1.GetHashCode">
            <summary>
                Returns the hash code for this instance.
            </summary>
            <returns>
                A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="F:CaptchaMvc.Models.KeyTimeEntry`1.Key">
            <summary>
                Gets the key.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Models.KeyTimeEntry`1.Timestamp">
            <summary>
                Gets the timestamp of the current entry.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.KeyTimeEntry`1.#ctor(`0)">
            <summary>
                Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.KeyTimeEntry`1.op_Implicit(`0)~CaptchaMvc.Models.KeyTimeEntry{`0}">
            <summary>
                Implicit conversion operator overload.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Models.MathBuildInfoModel">
            <summary>
            Represents the model with information for create a math captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.MathBuildInfoModel.#ctor(CaptchaMvc.Interface.IParameterContainer,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Models.MathBuildInfoModel"/> class.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.MathBuildInfoModel.MathParamterName">
            <summary>
            Gets the math parameter name.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Models.NumberCaptchaValue">
            <summary>
                Represents the base model for storing number ​​captcha values.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.NumberCaptchaValue.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Models.NumberCaptchaValue"/> class. This constructor used only for deserialize.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.NumberCaptchaValue.#ctor(System.String,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Models.NumberCaptchaValue"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.NumberCaptchaValue.IsEqual(System.String)">
            <summary>
                Determines whether the current captcha value is equal for the <c>inputText</c>.
            </summary>
            <param name="inputText"> The specified input text. </param>
            <returns>
                <c>True</c> if the value is equals; otherwise, <c>false</c> .
            </returns>
        </member>
        <member name="M:CaptchaMvc.Models.NumberCaptchaValue.DeserializeInternal(System.String,System.String,System.String[])">
            <summary>
                Deserializes the specified values into an <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/>.
            </summary>
            <param name="captchaText"> The specified captcha text. </param>
            <param name="value"> The specified captcha value. </param>
            <param name="source"> The specified values. </param>
        </member>
        <member name="P:CaptchaMvc.Models.NumberCaptchaValue.CaptchaText">
            <summary>
                Gets the specified captcha text.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.NumberCaptchaValue.Value">
            <summary>
                Gets the specified captcha value.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Models.ParameterModel">
            <summary>
                Represents the base model for captcha parameter.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.ParameterModel.#ctor(System.String,System.Object)">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Models.ParameterModel"/> class.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.ParameterModel.Name">
            <summary>
                Gets the name.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.ParameterModel.Value">
            <summary>
                Gets the value.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Models.PartialBuildInfoModel">
            <summary>
            Represents the default model with information for create a partial captcha.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.PartialBuildInfoModel.#ctor(System.Web.Mvc.HtmlHelper,CaptchaMvc.Interface.IBuildInfoModel,System.String,System.String,System.Web.Mvc.ViewDataDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:CaptchaMvc.Models.PartialBuildInfoModel"/> class.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.BuildInfoModel">
            <summary>
            Gets the specified <see cref="T:CaptchaMvc.Interface.IBuildInfoModel"/> for create captcha.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.PartialViewName">
            <summary>
            Gets the specified partial view name.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.ScriptPartialViewName">
            <summary>
            Gets the specified script-partial view name, if any.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.ViewData">
            <summary>
            Gets the specified <see cref="T:System.Web.Mvc.ViewDataDictionary"/>.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.Attributes">
            <summary>
                Gets the attributes.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.ParameterContainer">
            <summary>
                Gets the parameter container.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.TokenParameterName">
            <summary>
            Gets the token parameter name.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.RequiredMessage">
            <summary>
            Gets the required field message.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.IsRequired">
            <summary>
            Gets the is required flag.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.RefreshButtonText">
            <summary>
            Gets the refresh button text.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.InputText">
            <summary>
            Gets the input text.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.HtmlHelper">
            <summary>
            Gets the specified <see cref="P:CaptchaMvc.Interface.IBuildInfoModel.HtmlHelper"/>.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.InputElementId">
            <summary>
            Gets the input element id in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.TokenElementId">
            <summary>
            Gets the token element id in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.ImageElementId">
            <summary>
            Gets the image element id in DOM.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.ImageUrl">
            <summary>
            Gets the image url.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.RefreshUrl">
            <summary>
            Gets the refresh url.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.PartialBuildInfoModel.TokenValue">
            <summary>
            Gets the token value.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Models.StorageType">
            <summary>
                Represents the storage type for the <see cref="T:CaptchaMvc.Interface.IIntelligencePolicy"/>
            </summary>
        </member>
        <member name="F:CaptchaMvc.Models.StorageType.TempData">
            <summary>
                Uses the temp data as storage.
            </summary>
        </member>
        <member name="F:CaptchaMvc.Models.StorageType.Session">
            <summary>
                Uses the session as storage.
            </summary>
        </member>
        <member name="T:CaptchaMvc.Models.StringCaptchaValue">
            <summary>
                Represents the base model for storing ​string ​captcha values.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.StringCaptchaValue.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Models.NumberCaptchaValue"/> class. This constructor used only for deserialize.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.StringCaptchaValue.#ctor(System.String,System.String,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:CaptchaMvc.Models.StringCaptchaValue"/> class.
            </summary>
        </member>
        <member name="M:CaptchaMvc.Models.StringCaptchaValue.IsEqual(System.String)">
            <summary>
                Determines whether the current captcha value is equal for the <c>inputText</c>.
            </summary>
            <param name="inputText"> The specified input text. </param>
            <returns> <c>True</c> if the value is equals; otherwise, <c>false</c> . </returns>
        </member>
        <member name="M:CaptchaMvc.Models.StringCaptchaValue.DeserializeInternal(System.String,System.String,System.String[])">
            <summary>
                Deserializes the specified values into an <see cref="T:CaptchaMvc.Interface.ICaptchaValue"/>.
            </summary>
            <param name="captchaText"> The specified captcha text. </param>
            <param name="value"> The specified captcha value. </param>
            <param name="source"> The specified values. </param>
        </member>
        <member name="M:CaptchaMvc.Models.StringCaptchaValue.GetOptionalValue">
            <summary>
                Gets the optional values to serialize.
            </summary>
            <returns> An instance of <see cref="T:System.String"/> . </returns>
        </member>
        <member name="P:CaptchaMvc.Models.StringCaptchaValue.CaptchaText">
            <summary>
                Gets the specified captcha text.
            </summary>
        </member>
        <member name="P:CaptchaMvc.Models.StringCaptchaValue.Value">
            <summary>
                Gets the specified captcha value.
            </summary>
        </member>
    </members>
</doc>
